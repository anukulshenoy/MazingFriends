{"version":3,"sources":["webpack:///./src/components/Game/VideoChat.jsx?c2eb"],"names":["VideoChat","props","state","isChannelReady","isInitiator","isStarted","context","pc","localStream","remoteStream","turnReady","room","pcConfig","sdpConstraints","localVideo","document","querySelector","console","log","src","remoteVideo","socket","on","roomName","emit","navigator","mediaDevices","getUserMedia","audio","video","then","gotStream","catch","e","alert","name","setState","array","apply","sendMessage","message","start","type","setRemoteDescription","RTCSessionDescription","createAnswer","candidate","RTCIceCandidate","sdpMLineIndex","label","addIceCandidate","handleRemoteHangup","stream","window","URL","createObjectURL","constraints","createPeerConnection","addStream","call","onbeforeunload","RTCPeerConnection","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","event","id","sdpMid","handleCreateOfferError","createOffer","setLocalAndSendMessage","onCreateSessionDescriptionError","sessionDescription","setLocalDescription","error","toString","hangup","stop","close","getElementById","remove","push","pathname","Component"],"mappings":"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","file":"0.96d519eb7c03daf018ed.hot-update.js","sourcesContent":["import React from 'react';\nimport {browserHistory} from 'react-router';\n\nclass VideoChat extends React.Component {\n    constructor (props) {\n        super ()\n        this.state = {\n            isChannelReady: false,\n            isInitiator: false,\n            isStarted: false,\n        }\n    }\n    componentDidMount() {\n        var context = this;\n        var pc;\n        var localStream;\n        var remoteStream;\n        var turnReady;\n        var room;\n        //stun server for network data\n        var pcConfig = {\n            'iceServers': [{\n                'url': 'stun:stun.l.google.com:19302'\n            }]\n        };\n        // Set up audio and video regardless of what devices are present.\n        var sdpConstraints = {\n            'mandatory': {\n                'OfferToReceiveAudio': true,\n                'OfferToReceiveVideo': true\n            }\n        };\n\n        //your screen is local video- other person is remote video\n        var localVideo = document.querySelector('#localVideo');\n        console.log(\"local video\", localVideo.src);\n        var remoteVideo = document.querySelector('#remoteVideo');\n        socket.on('roomName', function(roomName) {\n            room = roomName;\n            socket.emit('create or join', room);\n            navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video: true\n            })\n                .then(gotStream)\n                .catch(function(e) {\n                    alert('getUserMedia() error: ' + e.name);\n                });\n            console.log('Room name : ', roomName);\n        });\n\n\n        socket.on('created', function(room) {\n            console.log('Created room ' + room);\n            context.setState({\n                isInitiator: true\n            })\n\n        });\n\n//once the second person joins, set channel to true\n        socket.on('join', function (room){\n            console.log('Another peer made a request to join room ' + room);\n            context.setState({\n                isChannelReady: true\n            })\n        });\n\n        //socket.on('joined', function(room) {\n        //    console.log('joined: ' + room);\n        //    isChannelReady = true;\n        //});\n\n        socket.on('log', function(array) {\n            console.log.apply(console, array);\n        });\n\n        socket.on('full', function(room){\n            alert(\"Room is full\");\n        });\n\n        function sendMessage(message) {\n            console.log('Client sending message: ', message);\n            socket.emit('message', message);\n        }\n\n// This client receives a message\n        socket.on('message', function(message) {\n            console.log('Client received message:', message);\n            //if person initiates call, invoke start\n            // else if person receives an offer, second person invokes start\n            //else if person receives an answer from second person, set remote description\n            if (message === 'got user media') {\n                start();\n            } else if (message.type === 'offer') {\n                console.log(\"MAKING AN OFFER\");\n                if (!context.state.isInitiator && !context.state.isStarted) {\n                    start();\n                }\n                pcConfig.setRemoteDescription(new RTCSessionDescription(message), function(){\n                    createAnswer();\n                    });\n\n            } else if (message.type === 'answer' && context.state.isStarted) {\n                pcConfig.setRemoteDescription(new RTCSessionDescription(message));\n            } else if (message.type === 'candidate' && context.state.isStarted) {\n                var candidate = new RTCIceCandidate({\n                    sdpMLineIndex: message.label,\n                    candidate: message.candidate\n                });\n                console.log(\"CANDIDATE:\", candidate);\n                pcConfig.addIceCandidate(candidate);\n            } else if (message === 'bye' && context.state.isStarted) {\n                handleRemoteHangup();\n            }\n        });\n\n\n//set the local stream\n        function gotStream(stream) {\n            console.log('Adding local stream.');\n            localVideo.src = window.URL.createObjectURL(stream);\n            console.log(\"local video source\", localVideo.src);\n            localStream = stream;\n            sendMessage('got user media');\n            console.log(\"is initiator\", context.state.isInitiator);\n            if (context.state.isInitiator) {\n                start();\n            }\n        }\n\n        var constraints = {\n            video: true\n        };\n\n        console.log('Getting user media with constraints', constraints);\n        //\n        //if (location.hostname !== 'localhost') {\n        //    (\n        //        'https://computeengineondemand.appspot.com/turn?username=41784574&key=4080218913'\n        //    );\n        //}\n\n        function start() {\n            console.log('>>>>>>> start ', context.state.isStarted, localStream, context.state.isChannelReady);\n            if (!context.state.isStarted && typeof localStream !== 'undefined' && context.state.isChannelReady) {\n                console.log('>>>>>> creating peer connection');\n                createPeerConnection();\n                pcConfig.addStream(localStream);\n                context.setState({\n                    isStarted: true\n                });\n                console.log('isInitiator', context.state.isInitiator);\n                if (context.state.isInitiator) {\n                    call();\n                }\n            }\n        }\n\n        window.onbeforeunload = function() {\n            sendMessage('bye');\n        };\n\n/////////////////////////////////////////////////////////\n\n        function createPeerConnection() {\n            //create a new peer connection\n            //add the ice handler\n            try {\n                pcConfig = new RTCPeerConnection(null);\n                pcConfig.onicecandidate = handleIceCandidate;\n                pcConfig.onaddstream = handleRemoteStreamAdded;\n                pcConfig.onremovestream = handleRemoteStreamRemoved;\n                console.log('Created RTCPeerConnnection');\n            } catch (e) {\n                console.log('Failed to create PeerConnection, exception: ' + e.message);\n                alert('Cannot create RTCPeerConnection object.');\n                return;\n            }\n        }\n\n        function handleIceCandidate(event) {\n            console.log('icecandidate event: ', event);\n            if (event.candidate) {\n                sendMessage({\n                    type: 'candidate',\n                    label: event.candidate.sdpMLineIndex,\n                    id: event.candidate.sdpMid,\n                    candidate: event.candidate.candidate\n                });\n            } else {\n                console.log('End of candidates.');\n            }\n        }\n\n        function handleRemoteStreamAdded(event) {\n            console.log('Remote stream added.');\n            remoteVideo.src = window.URL.createObjectURL(event.stream);\n            remoteStream = event.stream;\n        }\n\n        function handleCreateOfferError(event) {\n            console.log('createOffer() error: ', event);\n        }\n//initiate the offer and set the local description(your pc)\n//on response set the remote description(other persons pc)\n        function call() {\n            console.log('Sending offer to peer');\n            pcConfig.createOffer(setLocalAndSendMessage, handleCreateOfferError);\n        }\n\n        function createAnswer() {\n            console.log('Sending answer to peer.');\n            pcConfig.createAnswer().then(\n                setLocalAndSendMessage,\n                onCreateSessionDescriptionError\n            );\n        }\n\n        function setLocalAndSendMessage(sessionDescription) {\n            // Set Opus as the preferred codec in SDP if Opus is present.\n            //  sessionDescription.sdp = preferOpus(sessionDescription.sdp);\n            console.log(\"SESSIONDESCRIPTION:\", sessionDescription);\n            pcConfig.setLocalDescription(sessionDescription);\n            console.log('setLocalAndSendMessage sending message', sessionDescription);\n            sendMessage(sessionDescription);\n        }\n\n        function onCreateSessionDescriptionError(error) {\n            console.log('Failed to create session description: ' + error.toString());\n        }\n        //NOT BEING USED RIGHT NOW\n//TURN servers- if ICE cant find the external address, traffic will be routed using turn servers\n//        function requestTurn(turnURL) {\n//            var turnExists = false;\n//            for (var i in pcConfig.iceServers) {\n//                if (pcConfig.iceServers[i].url.substr(0, 5) === 'turn:') {\n//                    turnExists = true;\n//                    turnReady = true;\n//                    break;\n//                }\n//            }\n//            if (!turnExists) {\n//                console.log('Getting TURN server from ', turnURL);\n//                // No TURN server. Get one from computeengineondemand.appspot.com:\n//                var xhr = new XMLHttpRequest();\n//                xhr.onreadystatechange = function() {\n//                    if (xhr.readyState === 4 && xhr.status === 200) {\n//                        var turnServer = JSON.parse(xhr.responseText);\n//                        console.log('Got TURN server: ', turnServer);\n//                        pcConfig.iceServers.push({\n//                            'url': 'turn:' + turnServer.username + '@' + turnServer.turn,\n//                            'credential': turnServer.password\n//                        });\n//                        turnReady = true;\n//                    }\n//                };\n//                xhr.open('GET', turnURL, true);\n//                xhr.send();\n//            }\n//        }\n\n        function handleRemoteStreamAdded(event) {\n            console.log('Remote stream added.');\n            remoteVideo.src = window.URL.createObjectURL(event.stream);\n            remoteStream = event.stream;\n        }\n\n        function handleRemoteStreamRemoved(event) {\n            console.log('Remote stream removed. Event: ', event);\n        }\n\n        function hangup() {\n            console.log('Hanging up.');\n            stop();\n            sendMessage('bye');\n        }\n\n        function handleRemoteHangup() {\n            console.log('Session terminated.');\n            stop();\n            context.setState({\n                isInitiator: false\n            });\n        }\n\n        function stop() {\n            context.setState({\n                isStarted: false\n            });\n            // isAudioMuted = false;\n            // isVideoMuted = false;\n            pcConfig.close();\n            pcConfig = null;\n            remoteVideo.src = null;\n            localVideo.src = null;\n            document.getElementById(\"canvas\").remove();\n            socket.emit(\"quit\", room);\n            browserHistory.push({\n                pathname: '/home'\n            });\n        }\n\n///////////////////////////////////////////\n//NOT BEING USED RIGHT NOW\n// Set Opus as the default audio codec if it's present.\n//        function preferOpus(sdp) {\n//            var sdpLines = sdp.split('\\r\\n');\n//            var mLineIndex;\n//            // Search for m line.\n//            for (var i = 0; i < sdpLines.length; i++) {\n//                if (sdpLines[i].search('m=audio') !== -1) {\n//                    mLineIndex = i;\n//                    break;\n//                }\n//            }\n//            if (mLineIndex === null) {\n//                return sdp;\n//            }\n//\n//            // If Opus is available, set it as the default in m line.\n//            for (i = 0; i < sdpLines.length; i++) {\n//                if (sdpLines[i].search('opus/48000') !== -1) {\n//                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\n//                    if (opusPayload) {\n//                        sdpLines[mLineIndex] = setDefaultCodec(sdpLines[mLineIndex],\n//                            opusPayload);\n//                    }\n//                    break;\n//                }\n//            }\n//\n//            // Remove CN in m line and sdp.\n//            sdpLines = removeCN(sdpLines, mLineIndex);\n//\n//            sdp = sdpLines.join('\\r\\n');\n//            return sdp;\n//        }\n\n        //function extractSdp(sdpLine, pattern) {\n        //    var result = sdpLine.match(pattern);\n        //    return result && result.length === 2 ? result[1] : null;\n        //}\n\n// Set the selected codec to the first in m line.\n//        function setDefaultCodec(mLine, payload) {\n//            var elements = mLine.split(' ');\n//            var newLine = [];\n//            var index = 0;\n//            for (var i = 0; i < elements.length; i++) {\n//                if (index === 3) { // Format of media starts from the fourth.\n//                    newLine[index++] = payload; // Put target payload to the first.\n//                }\n//                if (elements[i] !== payload) {\n//                    newLine[index++] = elements[i];\n//                }\n//            }\n//            return newLine.join(' ');\n//        }\n\n// Strip CN from sdp before CN constraints is ready.\n//        function removeCN(sdpLines, mLineIndex) {\n//            var mLineElements = sdpLines[mLineIndex].split(' ');\n//            // Scan from end for the convenience of removing an item.\n//            for (var i = sdpLines.length - 1; i >= 0; i--) {\n//                var payload = extractSdp(sdpLines[i], /a=rtpmap:(\\d+) CN\\/\\d+/i);\n//                if (payload) {\n//                    var cnPos = mLineElements.indexOf(payload);\n//                    if (cnPos !== -1) {\n//                        // Remove CN payload from m line.\n//                        mLineElements.splice(cnPos, 1);\n//                    }\n//                    // Remove CN line in sdp\n//                    sdpLines.splice(i, 1);\n//                }\n//            }\n//\n//            sdpLines[mLineIndex] = mLineElements.join(' ');\n//            return sdpLines;\n//        }\n\n    }\n    render () {\n        return (\n            <div id=\"videos\">\n                <video id=\"localVideo\" autoPlay muted></video>\n                <video id=\"remoteVideo\" autoPlay></video>\n            </div>\n        );\n    }\n}\n\nexport default VideoChat;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Game/VideoChat.jsx"],"sourceRoot":""}