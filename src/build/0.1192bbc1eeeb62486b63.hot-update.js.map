{"version":3,"sources":["webpack:///./src/components/ChatView.jsx?2c6f"],"names":["VideoChat","state","message","messages","socket","window","context","on","setState","console","log","e","preventDefault","emit","target","value","sendMessage","bind","updateInput","map","messageObj","Component","Chat"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;KAEMA,S;;;AACJ,wBAAc;AAAA;;AAAA;;AAEZ,WAAKC,KAAL,GAAa;AACXC,gBAAS,EADE;AAEXC,iBAAU;AAFC,MAAb;AAFY;AAMb;;;;yCAEmB;AAClB,WAAIC,SAASC,OAAOD,MAApB;AACA,WAAIE,UAAU,IAAd;AACAF,cAAOG,EAAP,CAAU,gBAAV,EAA4B,UAASL,OAAT,EAAkB;AAC5CI,iBAAQE,QAAR,CAAiB;AACfL,qBAAUD;AADK,UAAjB;AAGAO,iBAAQC,GAAR,CAAY,sBAAZ,EAAoCJ,QAAQL,KAA5C;AACD,QALD;;AAOA,YAAKO,QAAL,CAAc;AACZJ,iBAAQA;AADI,QAAd;AAGD;;;iCACWO,C,EAAG;AACbA,SAAEC,cAAF;AACAP,cAAOD,MAAP,CAAcS,IAAd,CAAmB,aAAnB,EAAkC,KAAKZ,KAAL,CAAWC,OAA7C;AACD;;;iCAEWS,C,EAAG;AACb,YAAKH,QAAL,CAAc,EAACN,SAASS,EAAEG,MAAF,CAASC,KAAnB,EAAd;AACD;;;8BAEQ;AACP,cACE;AAAA;AAAA,WAAK,WAAU,MAAf;AACE;AAAA;AAAA;AAAA;AAAA,UADF;AAEE;AAAA;AAAA,aAAM,UAAU,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAhB;AACE,oDAAO,MAAK,MAAZ,EAAmB,OAAO,KAAKhB,KAAL,CAAWC,OAArC,EAA8C,UAAU,KAAKgB,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAxD,GADF;AAEE,oDAAO,MAAK,QAAZ,EAAqB,OAAM,QAA3B;AAFF,UAFF;AAME;AAAA;AAAA,aAAK,IAAG,SAAR;AACG,gBAAKhB,KAAL,CAAWE,QAAX,CAAoBgB,GAApB,CAAyB,UAACC,UAAD;AAAA,oBACxB;AAAA;AAAA;AACE;AAAA;AAAA;AAAKA,4BAAW,QAAX;AAAL,gBADF;AAEE;AAAA;AAAA;AAAMA,4BAAWlB;AAAjB;AAFF,cADwB;AAAA,YAAzB;AADH;AANF,QADF;AAiBD;;;;GAlDqB,gBAAMmB,S;;AAmD7B;;mBAGcC,I","file":"0.1192bbc1eeeb62486b63.hot-update.js","sourcesContent":["import React from 'react';\n\nclass VideoChat extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: '',\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    var socket = window.socket;\n    var context = this;\n    socket.on('receiveMessage', function(message) {\n      context.setState({\n        messages: message\n      });\n      console.log('in receiveMessage : ', context.state);\n    });\n\n    this.setState({\n      socket: socket\n    });\n  }\n  sendMessage(e) {\n    e.preventDefault();\n    window.socket.emit('sendMessage', this.state.message);\n  }\n\n  updateInput(e) {\n    this.setState({message: e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"Chat\">\n        <h1> Chat </h1>\n        <form onSubmit={this.sendMessage.bind(this)}> \n          <input type=\"text\" value={this.state.message} onChange={this.updateInput.bind(this)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <div id=\"chatBox\">\n          {this.state.messages.map( (messageObj) => (\n            <div>\n              <h3>{messageObj['userId']}</h3>\n              <div>{messageObj.message}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n\n\nexport default Chat;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ChatView.jsx"],"sourceRoot":""}