{"version":3,"sources":["webpack:///./src/components/Game/VideoChat.jsx?c2eb"],"names":["VideoChat","props","isChannelReady","isInitiator","isStarted","localStream","pc","remoteStream","turnReady","room","pcConfig","sdpConstraints","localVideo","document","querySelector","console","log","src","remoteVideo","doNothing","socket","on","roomName","emit","navigator","mediaDevices","getUserMedia","audio","video","then","gotStream","catch","e","alert","name","array","apply","sendMessage","message","start","type","setRemoteDescription","RTCSessionDescription","createAnswer","candidate","RTCIceCandidate","sdpMLineIndex","label","addIceCandidate","handleRemoteHangup","stream","window","URL","createObjectURL","constraints","createPeerConnection","addStream","call","onbeforeunload","RTCPeerConnection","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","event","id","sdpMid","handleCreateOfferError","createOffer","setLocalAndSendMessage","onCreateSessionDescriptionError","sessionDescription","setLocalDescription","error","toString","requestTurn","turnURL","turnExists","i","iceServers","url","substr","xhr","XMLHttpRequest","onreadystatechange","readyState","status","turnServer","JSON","parse","responseText","push","username","turn","password","open","send","hangup","stop","close","preferOpus","sdp","sdpLines","split","mLineIndex","length","search","opusPayload","extractSdp","setDefaultCodec","removeCN","join","sdpLine","pattern","result","match","mLine","payload","elements","newLine","index","mLineElements","cnPos","indexOf","splice","Component"],"mappings":"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","file":"0.d7f86f3d1ec7576ea90a.hot-update.js","sourcesContent":["import React from 'react';\n\nclass VideoChat extends React.Component {\n    constructor (props) {\n        super ()\n    }\n    componentDidMount() {\n\n        var isChannelReady = false;\n        var isInitiator = false;\n        var isStarted = false;\n        var localStream;\n        var pc;\n        var remoteStream;\n        var turnReady;\n        var room;\n        //stun server for network data\n        var pcConfig = {\n            'iceServers': [{\n                'url': 'stun:stun.l.google.com:19302'\n            }]\n        };\n        // Set up audio and video regardless of what devices are present.\n        var sdpConstraints = {\n            'mandatory': {\n                'OfferToReceiveAudio': true,\n                'OfferToReceiveVideo': true\n            }\n        };\n\n        //your screen is local video- other person is remote video\n        var localVideo = document.querySelector('#localVideo');\n        console.log(\"local video\", localVideo.src)\n        var remoteVideo = document.querySelector('#remoteVideo');\n        //get user media\n        function doNothing() {\n\n        }\n        socket.on('roomName', function(roomName) {\n            room = roomName;\n            socket.emit('create or join', room);\n            doNothing();\n            navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video: true\n            })\n                .then(gotStream)\n                .catch(function(e) {\n                    alert('getUserMedia() error: ' + e.name);\n                });\n            console.log('Room name : ', roomName);\n        });\n\n\n        socket.on('created', function(room) {\n            console.log('Created room ' + room);\n            isInitiator = true;\n\n        });\n\n//once the second person joins, set channel to true\n        socket.on('join', function (room){\n            console.log('Another peer made a request to join room ' + room);\n            isChannelReady = true;\n        });\n\n        socket.on('joined', function(room) {\n            console.log('joined: ' + room);\n            isChannelReady = true;\n        });\n\n        socket.on('log', function(array) {\n            console.log.apply(console, array);\n        });\n\n        socket.on('full', function(room){\n            alert(\"Room is full\");\n        });\n\n        function sendMessage(message) {\n            console.log('Client sending message: ', message);\n            socket.emit('message', message);\n        }\n\n// This client receives a message\n        socket.on('message', function(message) {\n            console.log('Client received message:', message);\n            //if person initiates call, invoke start\n            // else if person receives an offer, second person invokes start\n            //else if person receives an answer from second person, set remote description\n            if (message === 'got user media') {\n                start();\n            } else if (message.type === 'offer') {\n                if (!isInitiator && !isStarted) {\n                    start();\n                }\n                pc.setRemoteDescription(new RTCSessionDescription(message));\n                createAnswer();\n            } else if (message.type === 'answer' && isStarted) {\n                pc.setRemoteDescription(new RTCSessionDescription(message));\n            } else if (message.type === 'candidate' && isStarted) {\n                var candidate = new RTCIceCandidate({\n                    sdpMLineIndex: message.label,\n                    candidate: message.candidate\n                });\n                pc.addIceCandidate(candidate);\n            } else if (message === 'bye' && isStarted) {\n                handleRemoteHangup();\n            }\n        });\n\n\n//set the local stream\n        function gotStream(stream) {\n            console.log('Adding local stream.');\n            localVideo.src = window.URL.createObjectURL(stream);\n            console.log(\"local video source\", localVideo.src);\n            localStream = stream;\n            sendMessage('got user media');\n            if (isInitiator) {\n                start();\n            }\n        }\n\n        var constraints = {\n            video: true\n        };\n\n        console.log('Getting user media with constraints', constraints);\n        //\n        //if (location.hostname !== 'localhost') {\n        //    (\n        //        'https://computeengineondemand.appspot.com/turn?username=41784574&key=4080218913'\n        //    );\n        //}\n\n        function start() {\n            console.log('>>>>>>> start ', isStarted, localStream, isChannelReady);\n            if (!isStarted && typeof localStream !== 'undefined' && isChannelReady) {\n                console.log('>>>>>> creating peer connection');\n                createPeerConnection();\n                pc.addStream(localStream);\n                isStarted = true;\n                console.log('isInitiator', isInitiator);\n                if (isInitiator) {\n                    call();\n                }\n            }\n        }\n\n        window.onbeforeunload = function() {\n            sendMessage('bye');\n        };\n\n/////////////////////////////////////////////////////////\n\n        function createPeerConnection() {\n            //create a new peer connection\n            //add the ice handler\n            try {\n                pc = new RTCPeerConnection(null);\n                pc.onicecandidate = handleIceCandidate;\n                pc.onaddstream = handleRemoteStreamAdded;\n                pc.onremovestream = handleRemoteStreamRemoved;\n                console.log('Created RTCPeerConnnection');\n            } catch (e) {\n                console.log('Failed to create PeerConnection, exception: ' + e.message);\n                alert('Cannot create RTCPeerConnection object.');\n                return;\n            }\n        }\n\n        function handleIceCandidate(event) {\n            console.log('icecandidate event: ', event);\n            if (event.candidate) {\n                sendMessage({\n                    type: 'candidate',\n                    label: event.candidate.sdpMLineIndex,\n                    id: event.candidate.sdpMid,\n                    candidate: event.candidate.candidate\n                });\n            } else {\n                console.log('End of candidates.');\n            }\n        }\n\n        function handleRemoteStreamAdded(event) {\n            console.log('Remote stream added.');\n            remoteVideo.src = window.URL.createObjectURL(event.stream);\n            remoteStream = event.stream;\n        }\n\n        function handleCreateOfferError(event) {\n            console.log('createOffer() error: ', event);\n        }\n//initiate the offer and set the local description(your pc)\n//on response set the remote description(other persons pc)\n        function call() {\n            console.log('Sending offer to peer');\n            pc.createOffer(setLocalAndSendMessage, handleCreateOfferError);\n        }\n\n        function createAnswer() {\n            console.log('Sending answer to peer.');\n            pc.createAnswer().then(\n                setLocalAndSendMessage,\n                onCreateSessionDescriptionError\n            );\n        }\n\n        function setLocalAndSendMessage(sessionDescription) {\n            // Set Opus as the preferred codec in SDP if Opus is present.\n            //  sessionDescription.sdp = preferOpus(sessionDescription.sdp);\n            pc.setLocalDescription(sessionDescription);\n            console.log('setLocalAndSendMessage sending message', sessionDescription);\n            sendMessage(sessionDescription);\n        }\n\n        function onCreateSessionDescriptionError(error) {\n            console.log('Failed to create session description: ' + error.toString());\n        }\n//TURN servers- if ICE cant find the external address, traffic will be routed using turn servers\n        function requestTurn(turnURL) {\n            var turnExists = false;\n            for (var i in pcConfig.iceServers) {\n                if (pcConfig.iceServers[i].url.substr(0, 5) === 'turn:') {\n                    turnExists = true;\n                    turnReady = true;\n                    break;\n                }\n            }\n            if (!turnExists) {\n                console.log('Getting TURN server from ', turnURL);\n                // No TURN server. Get one from computeengineondemand.appspot.com:\n                var xhr = new XMLHttpRequest();\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 && xhr.status === 200) {\n                        var turnServer = JSON.parse(xhr.responseText);\n                        console.log('Got TURN server: ', turnServer);\n                        pcConfig.iceServers.push({\n                            'url': 'turn:' + turnServer.username + '@' + turnServer.turn,\n                            'credential': turnServer.password\n                        });\n                        turnReady = true;\n                    }\n                };\n                xhr.open('GET', turnURL, true);\n                xhr.send();\n            }\n        }\n\n        function handleRemoteStreamAdded(event) {\n            console.log('Remote stream added.');\n            remoteVideo.src = window.URL.createObjectURL(event.stream);\n            remoteStream = event.stream;\n        }\n\n        function handleRemoteStreamRemoved(event) {\n            console.log('Remote stream removed. Event: ', event);\n        }\n\n        function hangup() {\n            console.log('Hanging up.');\n            stop();\n            sendMessage('bye');\n        }\n\n        function handleRemoteHangup() {\n            console.log('Session terminated.');\n            stop();\n            isInitiator = false;\n        }\n\n        function stop() {\n            isStarted = false;\n            // isAudioMuted = false;\n            // isVideoMuted = false;\n            pc.close();\n            pc = null;\n        }\n\n///////////////////////////////////////////\n\n// Set Opus as the default audio codec if it's present.\n        function preferOpus(sdp) {\n            var sdpLines = sdp.split('\\r\\n');\n            var mLineIndex;\n            // Search for m line.\n            for (var i = 0; i < sdpLines.length; i++) {\n                if (sdpLines[i].search('m=audio') !== -1) {\n                    mLineIndex = i;\n                    break;\n                }\n            }\n            if (mLineIndex === null) {\n                return sdp;\n            }\n\n            // If Opus is available, set it as the default in m line.\n            for (i = 0; i < sdpLines.length; i++) {\n                if (sdpLines[i].search('opus/48000') !== -1) {\n                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\n                    if (opusPayload) {\n                        sdpLines[mLineIndex] = setDefaultCodec(sdpLines[mLineIndex],\n                            opusPayload);\n                    }\n                    break;\n                }\n            }\n\n            // Remove CN in m line and sdp.\n            sdpLines = removeCN(sdpLines, mLineIndex);\n\n            sdp = sdpLines.join('\\r\\n');\n            return sdp;\n        }\n\n        function extractSdp(sdpLine, pattern) {\n            var result = sdpLine.match(pattern);\n            return result && result.length === 2 ? result[1] : null;\n        }\n\n// Set the selected codec to the first in m line.\n        function setDefaultCodec(mLine, payload) {\n            var elements = mLine.split(' ');\n            var newLine = [];\n            var index = 0;\n            for (var i = 0; i < elements.length; i++) {\n                if (index === 3) { // Format of media starts from the fourth.\n                    newLine[index++] = payload; // Put target payload to the first.\n                }\n                if (elements[i] !== payload) {\n                    newLine[index++] = elements[i];\n                }\n            }\n            return newLine.join(' ');\n        }\n\n// Strip CN from sdp before CN constraints is ready.\n        function removeCN(sdpLines, mLineIndex) {\n            var mLineElements = sdpLines[mLineIndex].split(' ');\n            // Scan from end for the convenience of removing an item.\n            for (var i = sdpLines.length - 1; i >= 0; i--) {\n                var payload = extractSdp(sdpLines[i], /a=rtpmap:(\\d+) CN\\/\\d+/i);\n                if (payload) {\n                    var cnPos = mLineElements.indexOf(payload);\n                    if (cnPos !== -1) {\n                        // Remove CN payload from m line.\n                        mLineElements.splice(cnPos, 1);\n                    }\n                    // Remove CN line in sdp\n                    sdpLines.splice(i, 1);\n                }\n            }\n\n            sdpLines[mLineIndex] = mLineElements.join(' ');\n            return sdpLines;\n        }\n\n    }\n    render () {\n        return (\n            <div id=\"videos\">\n                <video id=\"localVideo\" autoPlay muted></video>\n                <video id=\"remoteVideo\" autoPlay></video>\n            </div>\n        );\n    }\n}\n\nexport default VideoChat;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Game/VideoChat.jsx"],"sourceRoot":""}